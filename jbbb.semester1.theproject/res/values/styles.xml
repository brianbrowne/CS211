<resources>

    <!--
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    -->
    <style name="AppBaseTheme" parent="android:Theme.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>
    
    <!--                             STYLES DESCRIPTION 
    
      For the styles aspect of our project, I decided that the design should be based on
    the primary userbase that would most likely download our app. This audience would likely 
    be students entering into their first year of third level education. Based on this info 
    we decided that the presentation in terms of color should reflect one much like the 
    universities gomaynooth website, which is also structured to to give an easy guide to
    maynooth; in this way our app would alienate as little people as possible.
   
   As our app contained two aspects (one being a venue locator, the other a book database),
   we decided that each aspect should contain its own individual look which would reflect
   correlation in activity intent, shown visually through both the style and the layout.
   In Styles we used a yellow color for both exam locator buttons, and a red color for the
   book database buttons.  Using colors in this way we lessen the difficulty in navigating the
   app, therefore making it more accessible to the user. -->
    

    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>
    
    
    <!--									ButtonsTheRooms
    
    Buttons for the rooms were designed in tandem with the layout to give an aesthetically
    pleasing look both conforming to our style and layout plan.  The activities pertaining
    to venues around campus will both share the same color, this way we imply shared purpose.
    Considering that the amount of exam rooms was far less than the entire list of lecture
    locations, buttons were designed around a specific layout where buttons would appear in
    rows of 3 to save space.  For devices unable to accomodate all buttons in a row, there
    is a scroll view implemented to still offer all the buttons in a single column. -->
    
    
    
    <style name="ButtonsTheRooms" 
			parent="@android:style/TextAppearance.Medium">
        <item name="android:layout_width">100dip</item>
        <item name="android:layout_height">80dip</item>
        <item name="android:textColor">#4E4E3C</item>
        <item name="android:background">#FFE900</item>       
    </style>
    
    <!--									ButtonsLecLoc			
  
  As mentioned before, the style was based on functional awareness. This LectueLocator activity
  would follow on the style developed for finding rooms, but the layout would focus on a scroll
  view for a single column containing all the rooms. This was done because it would not be
  feasible or aesthetically pleasing to arrange the large number of buttons into multiple
  rows.
  
  The layout_margin Bottom was used to prevent buttons appearing above one another.
  This code ensured the buttons would stay in their right place   -->
    
    <style name="ButtonsLecLoc" 
			parent="@android:style/TextAppearance.Medium">
        <item name="android:layout_width">100dip</item>
        <item name="android:layout_height">60dip</item>
        <item name="android:layout_marginBottom">10dip</item>
        <item name="android:textColor">#4E4E3C</item>
        <item name="android:background">#FFE900</item>       
    </style>
    
    <!--									ButtonsMainAc
    
      Buttons on the home page with intent to move to LectLocator and TheRooms are placed side 
      by side while using the same color pattern (yellow). This makes it easier to navigate the app. The 
      buttons are also placed underneath the background picture to keep in place with the look 
      and feel of the app.
    -->
    
    <style name="ButtonsMainAc" 
			parent="@android:style/TextAppearance.Medium">
        <item name="android:layout_width">120dip</item>
        <item name="android:layout_height">80dip</item>
        <item name="android:layout_marginBottom">10dip</item>
        <item name="android:textColor">#4E4E3C</item>
        <item name="android:background">#FFE900</item>       
    </style>
    
    <!--									BobbyMainButtons
    
    Buttons on the home page with the intent to move to ServerSide and ClientSide are 
    placed side by side while using the same color pattern (red). This makes it easier to navigate 
    the app. The buttons are also placed underneath the background picture and room locator
    buttons to keep in place with the look and feel of the app. -->
    
    <style name="BobbyMainButtons" 
			parent="@android:style/TextAppearance.Medium">
        <item name="android:layout_width">120dip</item>
        <item name="android:layout_height">80dip</item>
        
        <item name="android:textColor">#D8D8D8</item>
        <item name="android:background">#8B372E</item>       
    </style>
    
    <!--									BobbyPart  
    
    Considering there would be simple and few buttons for both ServerSide and ClientSide we used
    the same color and position to imply relative action with the database. The Submit button on 
    ClientSide, "Display Database" and "Delete Database" on ServerSide both share the same color
    scheme. The ClientSide holds one large position for submission, whereas ServerSide holds
    two buttons, "Display Database" above the text view and "Delete Database" below the text
    view.
     -->
    
    <style name="BobbyPart" 
			parent="@android:style/TextAppearance.Medium">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        
        <item name="android:textColor">#D8D8D8</item>
        <item name="android:background">#8B372E</item>       
    </style> 
    <!-- For the Database activity we continued using the gray background color, but continued to use the dark red for the submit button.  -->

</resources>
